'''*
tags::for, if_else

input:
def array_if_else(arr,predicator,if_func,else_func):
    """
    For each element in the input array, 
    if the predicator returns Ture, then apply the if-function to the element, 
    otherwise apply the else-function to the element. 
    """
    for i in range(len(arr)):
        arr[i] = if_func(arr[i]) if predicator(arr[i]) else else_func(arr[i])
    return arr

output:
def array_if_else(arr,predicator,if_func,else_func):
    """
    For each element in the input array, 
    if the predicator returns Ture, then apply the if-function to the element, 
    otherwise apply the else-function to the element. 
    """
    @for_range(len(arr))
    def _(i):
        arr[i] = (predicator(arr[i])).if_else(if_func(arr[i]),else_func(arr[i]))
    return arr
*'''

####################################################################

# insert here #

####################################################################

def p(x):
    return x%2

def if_func(x):
    return x+1

def else_func(x):
    return x**2

arr = [1,22,0,3]
sarr = sint.Array(len(arr))
for i in range(len(arr)):
    sarr[i] = arr[i]

out = array_if_else(sarr,p,if_func,else_func)
out.reveal()
flag = (out[0]==2).bit_and(out[1]==484).bit_and(out[2]==0).bit_and(out[3]==4)

@if_e(flag.reveal())
def _():
    print_ln("Pass the test")
@else_
def _():
    pass
