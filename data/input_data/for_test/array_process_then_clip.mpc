'''*
tags::for, if_else

input:
def array_process_then_clip(arr,func):
    """
    Process all elements in the input array with given function, 
    then clip the outcome in to range [-10,10]
    """
    for i in range(len(arr)):
        arr[i] = func(arr[i])
        if arr[i] > 10:
            arr[i] = 10
        if arr[i] < -10:
            arr[i] = -10
    return arr

output:
def array_process_then_clip(arr,func):
    """
    Process all elements in the input array with given function, 
    then clip the outcome in to range [-10,10]
    """
    @for_range(len(arr))
    def _(i):
        arr[i] = func(arr[i])
        arr[i] = (arr[i]>10).if_else(10,arr[i])
        arr[i] = (arr[i]<-10).if_else(-10,arr[i])
    return arr
*'''

####################################################################

# insert here #

####################################################################

def p(x):
    return x**2-11

arr = [1,2,4,3,10]
sarr = sint.Array(len(arr))
for i in range(len(arr)):
    sarr[i] = arr[i]

out = array_process_then_clip(sarr,p)
out.reveal()
flag = (out[0]==-10).bit_and(out[1]==-7).bit_and(out[2]==5).bit_and(out[3]==-2).bit_and(out[4]==10)

@if_e(flag.reveal())
def _():
    print_ln("Pass the test")
@else_
def _():
    pass
