'''*
tags::

input:
def deal_with_only_positive(array):
    """
    Add and substract the positive elements in the array to the partial sum
    Non-positive elements are skipped
    """
    sign = 1
    sum = 0
    for i in range(len(array)):
        if array[i]<=0:
            continue
        sum = sum + sign*array[i]
        sign = (-1)*sign
    return sum

output:
def deal_with_only_positive(array):
    """
    Add and substract the positive elements in the array to the partial sum
    Non-positive elements are skipped
    """
    sign = sint(1)
    sum = sint(0)
    @for_range(len(array))
    def _(i):
        sum.iadd((array[i]>0).if_else(sign*array[i],0))
        sign.update((array[i]>0).if_else((-1)*sign,sign))
    return sum
*'''

####################################################################

# insert here #

####################################################################

def standard(array):
    """
    Add and substract the positive elements in the array to the partial sum
    Non-positive elements are skipped
    """
    sign = 1
    sum = 0
    for i in range(len(array)):
        if array[i]<=0:
            continue
        sum = sum + sign*array[i]
        sign = (-1)*sign
    return sum

arr1 = [11,-4,5,-14,191,98,10]
sarr1 = sint.Array(len(arr1))
for i in range(len(arr1)):
    sarr1[i] = arr1[i]

arr2 = [1,2,-3,-88,100,20]
sarr2 = sint.Array(len(arr2))
for i in range(len(arr2)):
    sarr2[i] = arr2[i]

arr3 = [-1,-2,-3,-88,-20,-20]
sarr3 = sint.Array(len(arr3))
for i in range(len(arr3)):
    sarr3[i] = arr3[i]

output1 = deal_with_only_positive(sarr1)
output2 = deal_with_only_positive(sarr2)
output3 = deal_with_only_positive(sarr3)
expected_output1 = standard(arr1)
expected_output2 = standard(arr2)
expected_output3 = standard(arr3)

flag = (output1==expected_output1).bit_and(output2==expected_output2).bit_and(output3==expected_output3)

@if_e(flag.reveal())
def _():
    print_ln("Pass the test")
@else_
def _():
    pass
