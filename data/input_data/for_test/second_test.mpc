'''*
tags::for, if_else

input:
def second_test(arr):
    """
    Return whether or not the first element in the array is smaller than exactly one element.
    """
    count = 0
    for i in range(1,len(arr)):
        if arr[0]<arr[i]:
            count = count + 1
    if count == 1:
        return True
    else:
        return False

output:
def second_test(arr):
    """
    Return whether or not the first element in the array is smaller than exactly one element.
    """
    count = sint(0)
    @for_range(1,len(arr))
    def _(i):
        count.update((arr[0]<arr[i]).if_else(count+1,count))
    return count==1
*'''

####################################################################

# insert here #

####################################################################

arr1 = [2,3,0,-0.7]
arr2 = [19,1,3,34,9,18.5]
arr3 = [18,7,18,18.5]
arr4 = [-7,-114,-7,-16,-818]
arr5 = [3,2,3,4,5]

sarr1 = sfix.Array(len(arr1))
sarr2 = sfix.Array(len(arr2))
sarr3 = sfix.Array(len(arr3))
sarr4 = sfix.Array(len(arr4))
sarr5 = sfix.Array(len(arr5))

for i in range(len(arr1)):
    sarr1[i] = arr1[i]
for i in range(len(arr2)):
    sarr2[i] = arr2[i]
for i in range(len(arr3)):
    sarr3[i] = arr3[i]
for i in range(len(arr4)):
    sarr4[i] = arr4[i]
for i in range(len(arr5)):
    sarr5[i] = arr5[i]

flag = (second_test(sarr1)==1).bit_and((second_test(sarr2)==1)).bit_and((second_test(sarr3)==1)).bit_and((second_test(sarr4)==0)).bit_and((second_test(sarr5)==0))
@if_e(flag.reveal())
def _():
    print_ln("Pass the test")
@else_
def _():
    pass