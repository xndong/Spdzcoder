# 2023-09-04 09:50:01
'''*
tags::multi_if_else

input:
def gpa_calculator(score):
    """
    Return the GPA according to the score. 
    [90,100]: 4.0
    [85,90): 3.6
    [80,85): 3.3
    [75,80): 3.0
    [70,75): 2.6
    [0,70): 2.3
    The input is guaranteed to be in the range [0,100]
    """
    if 90<=score:
        return 4.0
    elif 85<=score:
        return 3.6
    elif 80<=score:
        return 3.3
    elif 75<=score:
        return 3.0
    elif 70<=score:
        return 2.6
    else:
        return 2.3
    

output:
def gpa_calculator(score):
    """
    Return the GPA according to the score. 
    [90,100]: 4.0
    [85,90): 3.6
    [80,85): 3.3
    [75,80): 3.0
    [70,75): 2.6
    [0,70): 2.3
    The input is guaranteed to be in the range [0,100]
    """
    return (90<=score).if_else(sfix(4.0),(85<=score).if_else(sfix(3.6),(80<=score).if_else(sfix(3.3),(75<=score).if_else(sfix(3.0),(70<=score).if_else(sfix(2.6),sfix(2.3))))))
*'''

####################################################################

# insert here #

####################################################################

def standard(score):
    """
    Return the GPA according to the score. 
    [90,100]: 4.0
    [85,90): 3.6
    [80,85): 3.3
    [75,80): 3.0
    [70,75): 2.6
    [0,70): 2.3
    The input is guaranteed to be in the range [0,100]
    """
    if 90<=score<=100:
        return 4.0
    elif 85<=score<90:
        return 3.6
    elif 80<=score<85:
        return 3.3
    elif 75<=score<80:
        return 3.0
    elif 70<=score<75:
        return 2.6
    else:
        return 2.3

scores = [98, 100, 20, 90, 7, 85, 79.9]
sscores = sfix.Array(len(scores))
for i in range(len(scores)):
    sscores[i] = sfix(scores[i])

flag = sint(1)
for i in range(len(scores)):
    gpa = gpa_calculator(sscores[i])
    gpa.reveal()
    flag.update(flag.bit_and(gpa==standard(scores[i])))

@if_e(flag.reveal())
def _():
    print_ln("Pass the test")
@else_
def _():
    pass