# 2023-09-04 09:38:31
'''*
tags::if_else

input:
def relu(x):
    """
    ReLU function
    """
    if x>0:
        return x
    else:
        return 0

output:
def relu(x):
    """
    ReLU function
    """
    return (x>0).if_else(x, 0)
*'''

####################################################################

# insert here #

####################################################################

flag = sint(1)

a = sfix(-1)
b = sfix(17.5)
c = sfix(0.001)
d = sfix(-0.7)

a_outcome = relu(a)
b_outcome = relu(b)
c_outcome = relu(c)
d_outcome = relu(d)
a_outcome.reveal()
b_outcome.reveal()
c_outcome.reveal()
d_outcome.reveal()

bit = (abs(a_outcome)<0.001).if_else(True,False)
flag = flag.bit_and(bit)
bit = (abs((b_outcome-b)/b)<0.01).if_else(True,False)
flag = flag.bit_and(bit)
bit = (abs((c_outcome-c)/c)<0.01).if_else(True,False)
flag = flag.bit_and(bit)
bit = (abs(d_outcome)<0.001).if_else(True,False)
flag = flag.bit_and(bit)

@if_e(flag.reveal())
def _():
    print_ln("Pass the test")
@else_
def _():
    pass
