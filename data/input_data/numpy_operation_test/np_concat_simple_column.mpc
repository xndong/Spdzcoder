'''*
tags::array concatenation on columns

input:
import numpy as np
def array_simple_concate_column(ndarrayA, ndarrayB):
    """
    NumPy program to concatnate elements from two 2-D arrays along axis 1.
    """
    array = np.concatenate((ndarrayA, ndarrayB), axis=1).copy()
    return array

output:
def array_simple_concate_column(spdzArrayA, spdzArrayB):
    """
    MP-SPDZ program to concatnate elements from two 2-D arrays along axis 1.
    """
    array =spdzArrayA.concat_columns(spdzArrayB)
    return array
*'''

####################################################################

# insert here #

####################################################################

import numpy as np

a = Matrix.create_from([[sfix(1),sfix(1)],[sfix(2),sfix(2)]])
b = Matrix.create_from([[sfix(3),sfix(3)],[sfix(4),sfix(4)]])
c = array_simple_concate_column(a,b)

flag = (c[0][0]==1).bit_and(c[0][1]==1).bit_and(c[0][2]==3).bit_and(c[0][3]==3).bit_and(c[1][0]==2).bit_and(c[1][1]==2).bit_and(c[1][2]==4).bit_and(c[1][3]==4)

@if_e(flag.reveal())
def _():
    print_ln("Pass the test")
@else_
def _():
    pass