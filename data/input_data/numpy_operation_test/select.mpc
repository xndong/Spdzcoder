'''*
tags::

input:
def select(ind,a,b):
    """
    Select elements from the two arrays, the array elements are float data.
    """
    import numpy as np
    return np.where(ind, a, b)

output:
def select(ind,a,b):
    """
    Select elements from the two arrays, the array elements are float data.
    """
    ret = sfix.Array(len(ind))
    ind_vec = ind.get_vector()
    a_vec = a.get_vector()
    b_vec = b.get_vector()
    ret_vec = ret.get_vector()
    ret_vec = ind_vec.if_else(a_vec,b_vec)
    ret.assign_vector(ret_vec)
    return ret

*'''

####################################################################

# insert here #

####################################################################

import numpy as np

def standard(ind,a,b):
    """
    Select elements from the two arrays
    """
    import numpy as np
    return np.where(ind, a, b)

arr = [2.0,3.0,-4.0,5.0]
brr = [-1.0,-7.0,9.0,12.0]
ind = [1,0,1,0]
sarr = sfix.Array(len(arr))
sbrr = sfix.Array(len(brr))
sind = sint.Array(len(ind))
for i in range(len(sarr)):
    sarr[i] = arr[i]
    sbrr[i] = brr[i]
    sind[i] = ind[i]

expected_out = standard(np.array(ind),np.array(arr),np.array(brr))
out = select(sind,sarr,sbrr)

flag = sint(1)
for i in range(len(out)):
    flag = flag.bit_and(out[i]==expected_out[i])

@if_e(flag.reveal())
def _():
    print_ln("Pass the test")
@else_
def _():
    pass