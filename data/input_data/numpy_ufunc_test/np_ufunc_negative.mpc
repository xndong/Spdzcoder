'''*
tags:: negative

input:
import numpy
def negative(arrayA):
    """This function essentially returns a copy of the input array with all its elements being inverse number."""
    array = -arrayA
    return array

output:
def negative(spdzarrayA):
    array = Array.create_from(-1*spdzarrayA.get_vector())
    return array

*'''

####################################################################

# insert here #

####################################################################

import numpy as np

def standard(arrayA):
    """This function essentially returns a copy of the input array with all its elements being inverse number."""
    array = -arrayA
    return array

a = np.array([0.5,-1.2,10.7,5.0,-7.2])
sa = sfix.Array(len(a))
for i in range(len(sa)):
    sa[i] = a[i]

out = standard(a)
sout = negative(sa)

flag = sint(1)

for i in range(len(sout)):
    flag = flag.bit_and(abs(sout[i]-out[i])<0.005)

@if_e(flag.reveal())
def _():
    print_ln("Pass the test")
@else_
def _():
    pass
