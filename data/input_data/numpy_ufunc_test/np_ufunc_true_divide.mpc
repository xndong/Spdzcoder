'''*
tags:: true divide

input:
import numpy
def true_divide(arrayA, arrayB):
    """true divide between two numpy 1-d arrays."""
    array = numpy.true_divide(arrayA, arrayB)
    return array

output:
def true_divide(spdzarrayA, spdzarrayB):
    """true divide between two numpy 1-d arrays."""
    res = spdzarrayA.get_vector() / spdzarrayB.get_vector()
    array = Array.create_from(res)
    return array
*'''

####################################################################

# insert here #

####################################################################

import numpy as np

def standard(arrayA, arrayB):
    """true divide between two numpy 1-d arrays."""
    array = np.true_divide(arrayA, arrayB)
    return array

a = np.array([1.0,2.0,10.0,5.0,7.0])
sa = sfix.Array(len(a))
for i in range(len(sa)):
    sa[i] = a[i]

b = np.array([3.0,2.0,2.0,1.5,0.5])
sb = sfix.Array(len(b))
for i in range(len(sb)):
    sb[i] = b[i]

out = standard(a,b)
sout = true_divide(sa,sb)

flag = sint(1)

for i in range(len(sout)):
    flag = flag.bit_and(abs(sout[i]-out[i])<0.05)

@if_e(flag.reveal())
def _():
    print_ln("Pass the test")
@else_
def _():
    pass
